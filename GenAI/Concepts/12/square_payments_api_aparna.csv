API Name,Endpoint,Description,Parameters,Node.js,Method
Register Domain,https://connect.squareup.com/v2/apple-pay/domains,Activates a domain for use with Apple Pay on the Web and Square,domain_name:string:Required,"import { SquareClient, SquareEnvironment } from 'square'; const client = new SquareClient({  environment: SquareEnvironment.Sandbox,  accessToken: 'YOUR_ACCESS_TOKEN', }); async function registerDomain() {  const response = await client.applePayApi.registerDomain({   domainName: 'example.com',  });  console.log(response.result); } registerDomain();",POST
CreatePayment,https://connect.squareup.com/v2/payments,Creates a payment using a card or other supported source.,"idempotency_key:string:required, amount_money.object:required, source_id:string:required, autocomplete:boolean, customer_id:string, note:string","import { SquareClient, SquareEnvironment } from ""square""; async function main() {   const client = new SquareClient({     environment: SquareEnvironment.Sandbox,     token: ""YOUR_ACCESS_TOKEN"",   });   await client.payments.create({     idempotencyKey: ""16153d10-854c-4619-a6ea-79beb04fc10b"",   }); } main();",POST
GetPayment,https://connect.squareup.com/v2/payments/{payment_id},Retrieves payment details by payment ID.,payment_id:string:required,"import { SquareClient, SquareEnvironment } from ""square""; async function main() {   const client = new SquareClient({     environment: SquareEnvironment.Sandbox,     token: ""YOUR_ACCESS_TOKEN"",   });   await client.payments.get({}); } main();",GET
ListPayments,https://connect.squareup.com/v2/payments,Retrieves a list of payments taken by the account.,"begin_time:string, card_brand:string, cursor:string, end_time:string, is_offline_payment:boolean, last_4:string, limit:integer, location_id:string, offline_begin_time:string, offline_end_time:string, sort_field:string, sort_order:string, total:integer, updated_at_begin_time:string, updated_at_end_time:string","import { SquareClient, SquareEnvironment } from ""square""; async function main() {   const client = new SquareClient({     environment: SquareEnvironment.Sandbox,     token: ""YOUR_ACCESS_TOKEN"",   });   await client.payments.list({}); } main();",GET
CancelPaymentByIdempotencyKey,https://connect.squareup.com/v2/payments/cancel,Cancels a payment identified by the idempotency key.,idempotency_key:string:required,"import { SquareClient, SquareEnvironment } from ""square""; async function main() {   const client = new SquareClient({     environment: SquareEnvironment.Sandbox,     token: ""YOUR_ACCESS_TOKEN"",   });   await client.payments.cancelByIdempotencyKey({}); } main();",POST
UpdatePayment,https://connect.squareup.com/v2/payments/{payment_id},Updates specific fields of an existing payment.,"payment_id:string:required, version:integer:optional, note:string:optional","import { SquareClient, SquareEnvironment } from 'square'; const client = new SquareClient({ environment: SquareEnvironment.Sandbox, accessToken: 'YOUR_ACCESS_TOKEN' }); async function updatePayment() { const res = await client.paymentsApi.updatePayment('payment_id', { note: 'Updated payment note' }); console.log(res.result); } updatePayment();",PUT
CancelPayment,https://connect.squareup.com/v2/payments/{payment_id}/cancel,Cancels an in-progress payment using the payment ID.,payment_id:string:required,"import { SquareClient, SquareEnvironment } from 'square'; const client = new SquareClient({ environment: SquareEnvironment.Sandbox, accessToken: 'YOUR_ACCESS_TOKEN' }); async function cancelPayment() { const res = await client.paymentsApi.cancelPayment('payment_id'); console.log(res.result); } cancelPayment();",POST
